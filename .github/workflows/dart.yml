# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Flutter App for Windows and macOS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # build-windows:
  #   name: Build for Windows
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     # Set up Flutter on Windows
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.22.2'
  #         channel: 'stable'

  #     - name: Install Dependencies
  #       run: flutter pub get

  #     # Run Flutter build for Windows
  #     - name: Build Windows app
  #       run: flutter build windows

  #     - name: Archive Release
  #       uses: thedoctor0/zip-release@master
  #       with:
  #         type: 'zip'
  #         filename: Flutter1-${{github.ref_name}}-windows.zip
  #         directory: build/windows/runner/Release
  #     - name: Windows Release
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         files: build/windows/runner/Release/Flutter1-${{github.ref_name}}-windows.zip
      # Optionally, you can upload the build artifacts
      # - name: Upload Windows Build
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: windows-build
      #     path: build/windows/runner/Release/
  build-and-release-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter-version: '2.10.0'
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: MacRecoveryX-${{github.ref_name}}-windows.zip
          directory: build/windows/runner/Release
      - name: Windows Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/windows/runner/Release/MacRecoveryX-${{github.ref_name}}-windows.zip
          
  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      # Set up Flutter on macOS
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get
        
      # Run Flutter build for macOS
      - name: Build macOS app
        run: flutter build macos

      # Optionally, you can upload the build artifacts
      - name: Upload macOS Build
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: build/macos/Build/Products/Release/

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      # - name: Run tests
      #   run: dart test
